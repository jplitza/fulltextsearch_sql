name: Test
on:
  push:
    branches:
      - '**'
    paths-ignore:
      - README.md
      - LICENSE
      - renovate.json
      - .gitignore
      - appinfo/info.xml
      - .github/workflows/release.yml
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Nextcloud ${{ matrix.nextcloud }} - ${{ matrix.db.name }}
    strategy:
      matrix:
        db:
          - name: mysql
            image: mariadb:12
            username: root
            database: nextcloud
            port: 3306
          - name: pgsql
            image: postgres:18
            username: postgres
            database: postgres
            port: 5432
        nextcloud:
        - "32"
    services:
      db:
        image: ${{ matrix.db.image }}
        env:
          MARIADB_ROOT_PASSWORD: password
          POSTGRES_PASSWORD: password
    container:
      image: nextcloud:${{ matrix.nextcloud }}
    steps:
      - name: Copy Nextcloud source
        run: ln -s /usr/src/nextcloud/* ${GITHUB_WORKSPACE}/

      - uses: actions/checkout@v5
        with:
          path: apps/fulltextsearch_sql

      # The nextcloud container doesn't have `node`, so the cache action cannot execute
      # - name: Cache Composer packages
      #   id: composer-cache
      #   uses: actions/cache@v4
      #   with:
      #     path: apps/fulltextsearch_sql/vendor
      #     key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-php-

      - name: Install composer
        run: curl -sSf https://raw.githubusercontent.com/composer/getcomposer.org/f3108f64b4e1c1ce6eb462b159956461592b3e3e/web/installer | php -- --install-dir /usr/local/bin
        if: steps.composer-cache.outputs.cache-hit != 'true'

      - name: Install dependencies
        run: composer.phar install --prefer-dist --no-progress
        working-directory: apps/fulltextsearch_sql
        if: steps.composer-cache.outputs.cache-hit != 'true'

      - name: Wait for database to get ready
        run: while ! bash -c "echo -n > /dev/tcp/db/${{ matrix.db.port }}" 2> /dev/null; do sleep 1; done

      - name: Install nextcloud
        run: >
          php occ -n maintenance:install \
            --admin-pass=admin \
            --database=${{ matrix.db.name }} \
            --database-host=db \
            --database-user=${{ matrix.db.username }} \
            --database-pass=password \
            --database-name=${{ matrix.db.database }}

      - name: Enable fulltextsearch app
        run: php occ -n app:enable fulltextsearch
      
      - name: Enable fulltextsearch_sql app
        run: php occ -n app:enable fulltextsearch_sql
      
      - name: Configure fulltextsearch_sql as platform
        run: >
          php occ -n fulltextsearch:configure '{"search_platform": "OCA\\FullTextSearch_SQL\\Platform\\SQLPlatform"}'

      - name: Output fulltextsearch_sql settings
        run: php occ -n fulltextsearch:check

      # This can be removed as soon as https://github.com/nextcloud/fulltextsearch/pull/915 is merged.
      - name: Fix test harness
        run: >
          sed -i \
            -e "s/'document is a simple test'/'document is a'/" \
            -e "s/document is a simple -test/document -test/" \
            custom_apps/fulltextsearch/lib/Command/Test.php

      - name: Run fulltextsearch test
        run: php occ -n fulltextsearch:test --platform_delay 1

      - name: Enable files_fulltextsearch provider
        run: php occ app:enable files_fulltextsearch

      - name: Identify test PDF document
        run: >
          php occ info:file '/admin/files/Nextcloud Manual.pdf' | awk '$1 == "fileid:" { print "TEST_DOC=" $2 }' > "$GITHUB_ENV"

      - name: Index test PDF document
        run: php occ fulltextsearch:document:index admin files "$TEST_DOC"
      
      - name: Search for test PDF document
        run: php occ fulltextsearch:search admin Nextcloud | grep -- "^ - $TEST_DOC score:"
      
      - name: Create test ISO-8859-1 document
        run: echo -e "F\xFCr Testzwecke" | php occ files:put - /admin/files/iso-8859-1.txt

      - name: Identify test ISO-8859-1 document
        run: >
          php occ info:file '/admin/files/iso-8859-1.txt' | awk '$1 == "fileid:" { print "TEST_DOC=" $2 }' > "$GITHUB_ENV"
      
      - name: Index test ISO-8859-1 document
        run: php occ fulltextsearch:document:index admin files "$TEST_DOC"
      
      - name: Search for test ISO-8859-1 document
        run: php occ fulltextsearch:search admin Testzwecke | grep -- "^ - $TEST_DOC score:"
